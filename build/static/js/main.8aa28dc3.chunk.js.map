{"version":3,"sources":["SortingVisualizer.js","App.js","index.js"],"names":["BAR_WIDTH","window","innerWidth","MAX_BAR_HEIGHT","innerHeight","SortingVisualizer","props","l","i","push","randomNum","state","list","selectedMenu","generateRandomNumbers","bind","changeMenu","bubbleSort","insertionSort","selectionSort","partition","quickSort","this","setState","a","bars","document","getElementsByClassName","length","j","t","style","backgroundColor","timeout","key","min_idx","arr","h","x","A","p","s","render","Array","isArray","map","item","index","divStyle","height","margin","PADDING","width","background","float","border","borderRadius","className","type","onClick","console","log","sorted","React","Component","Math","floor","random","delay","Promise","res","setTimeout","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8aa28dc3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NUMBER_OF_LIST_ITEMS = 50;\r\nconst PADDING = 1;\r\nconst BAR_WIDTH  = window.innerWidth/NUMBER_OF_LIST_ITEMS - 2 * PADDING;\r\nconst MAX_BAR_HEIGHT = window.innerHeight / 1.5;\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let l = [];\r\n        for(let i=0; i<NUMBER_OF_LIST_ITEMS; i++) {\r\n            l.push(randomNum(MAX_BAR_HEIGHT));\r\n        }\r\n        this.state = {\r\n            list: l,\r\n            selectedMenu: null,\r\n        }\r\n        this.generateRandomNumbers = this.generateRandomNumbers.bind(this);\r\n        this.changeMenu = this.changeMenu.bind(this);\r\n        this.generateRandomNumbers = this.generateRandomNumbers.bind(this);\r\n        this.bubbleSort = this.bubbleSort.bind(this);\r\n        this.insertionSort = this.insertionSort.bind(this);\r\n        this.selectionSort = this.selectionSort.bind(this);\r\n        this.partition = this.partition.bind(this);\r\n        this.quickSort = this.quickSort.bind(this);\r\n    }\r\n\r\n    generateRandomNumbers() {\r\n        let l = [];\r\n        for(let i=0; i<NUMBER_OF_LIST_ITEMS; i++) {\r\n            l.push(randomNum(MAX_BAR_HEIGHT));\r\n        }\r\n        this.setState({list:l});\r\n    }\r\n\r\n    async bubbleSort() {\r\n        let l = this.state.list;\r\n        const bars = document.getElementsByClassName(\"bar\");\r\n        let t;\r\n        for(let i = 0; i< l.length; i++) {\r\n            for(let j = 0; j< l.length - 1 - i; j++) {\r\n                if(l[j] > l[j+1]) {\r\n                    t = l[j];\r\n                    l[j] = l[j+1];\r\n                    l[j+1] = t;\r\n                }\r\n                bars[j+1].style.backgroundColor = 'red';\r\n                bars[j].style.backgroundColor = 'red';\r\n                await timeout(0.1);\r\n                bars[j+1].style.backgroundColor = 'blue';\r\n                bars[j].style.backgroundColor = 'blue';\r\n                this.setState({list: l});\r\n            }\r\n        }  \r\n    }\r\n\r\n    async insertionSort() {\r\n        let l = this.state.list;\r\n        const bars = document.getElementsByClassName(\"bar\");\r\n        let i, key, j;\r\n        for (i = 1; i < l.length; i++){\r\n            key = l[i];\r\n            j = i - 1;\r\n            while (j >= 0 && l[j] > key){\r\n                // Animation\r\n                bars[j+1].style.backgroundColor = 'red';\r\n                bars[j].style.backgroundColor = 'red';\r\n                await timeout(0.1);\r\n                bars[j+1].style.backgroundColor = 'blue';\r\n                bars[j].style.backgroundColor = 'blue';\r\n                this.setState({list: l});\r\n\r\n                l[j + 1] = l[j];\r\n                j--;\r\n                \r\n            }\r\n            l[j + 1] = key;\r\n        }\r\n    }\r\n\r\n    async selectionSort() {\r\n        let l = this.state.list;\r\n        const bars = document.getElementsByClassName(\"bar\");\r\n        let i, j, min_idx, t; \r\n        for (i = 0; i < l.length-1; i++) {   \r\n            min_idx = i; \r\n            for (j = i+1; j < l.length; j++) {\r\n                if (l[j] < l[min_idx]) \r\n                    min_idx = j; \r\n                // Animation\r\n                bars[j].style.backgroundColor = 'red';\r\n                bars[i].style.backgroundColor = 'purple';\r\n                await timeout(0.1);\r\n                bars[j].style.backgroundColor = 'blue';\r\n                bars[i].style.backgroundColor = 'blue';\r\n                \r\n                this.setState({list: l});    \r\n            }\r\n            t = l[min_idx];\r\n            l[min_idx] = l[i];\r\n            l[i] = t;\r\n        } \r\n    }\r\n\r\n    async partition(arr, l, h) {\r\n        const bars = document.getElementsByClassName(\"bar\");\r\n        let x = arr[h];\r\n        let i = (l - 1);\r\n\r\n        \r\n    \r\n        for (let j = l; j <= h - 1; j++) {\r\n            if(bars[j]) {\r\n                bars[j].style.backgroundColor = 'red';\r\n                await timeout(1);\r\n                bars[j].style.backgroundColor = 'blue';\r\n                this.setState({list: arr});\r\n            }\r\n            if (arr[j] <= x) {\r\n                i++;\r\n                [arr[i], arr[j]] = [arr[j], arr[i]];\r\n            }\r\n        }\r\n        [arr[i+1], arr[h]] = [arr[h], arr[i + 1]];\r\n\r\n        if(bars[i]) {\r\n                bars[i].style.backgroundColor = 'red';\r\n                await timeout(1);\r\n                bars[i].style.backgroundColor = 'blue';\r\n                this.setState({list: arr});\r\n        }\r\n        return (i + 1);\r\n    }\r\n  \r\n    async quickSort(A, l, h) {\r\n        if (l < h) {\r\n            let p = this.partition(A, l, h);\r\n            await this.quickSort(A, l, p - 1);\r\n            await this.quickSort(A, p + 1, h);\r\n        }\r\n        return A;\r\n    }\r\n\r\n    changeMenu(s) {\r\n        this.setState({selectedMenu: s});\r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        let bars = Array.isArray(this.state.list) && this.state.list.map((item, index) => {\r\n            let divStyle = {\r\n                height: item + \"px\",\r\n                margin: PADDING + \"px\",\r\n                width: BAR_WIDTH,\r\n                background: 'blue',\r\n                float: \"left\",\r\n                border: \"1px\",\r\n                borderRadius: \"10px\"\r\n            };\r\n            return (\r\n                <div className=\"bar\" style={divStyle} key={index}></div>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"SortingVisualizer\">\r\n                <div className=\"Toolbar\">\r\n                    <div className=\"ToolbarItem\">\r\n                        <div className=\"ToolbarTitle\">\r\n                            SortingVisualizer\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ToolbarItem\">\r\n                        <button type=\"button\" className=\"ToolBarItem\" onClick={() => {\r\n                            console.log(\"bubble\");\r\n                            this.bubbleSort();\r\n                            this.changeMenu(\"bubble\");\r\n                        }}>Bubble Sort</button>\r\n                    </div>\r\n                    <div className=\"ToolbarItem\">\r\n                        <button type=\"button\" className=\"ToolBarItem\" onClick={() => {\r\n                            this.insertionSort();\r\n                            this.changeMenu(\"insertion\");\r\n                        }}>Insertion Sort</button>\r\n                    </div>\r\n                    <div className=\"ToolbarItem\">\r\n                        <button type=\"button\" className=\"ToolBarItem\" onClick={() => {\r\n                            this.selectionSort();\r\n                            this.changeMenu(\"selection\");\r\n                        }}>Selection Sort</button>\r\n                    </div>\r\n\r\n                    <div className=\"ToolbarItem\">\r\n                        <button type=\"button\" className=\"ToolBarItem\" onClick={() => {\r\n                            let sorted = this.quickSort(this.state.list, 0, this.state.list.length - 1);\r\n                            this.changeMenu(\"quick\");\r\n                            this.setState({list: sorted});\r\n                        }}>Quick Sort</button>\r\n                    </div>\r\n                    \r\n                    <div className=\"ToolbarItem\">\r\n                        Selected: {this.state.selectedMenu}\r\n                    </div>\r\n                    <div className=\"ToolbarItem\">\r\n                        <button type=\"button\" className=\"ToolBarItem\" onClick={() => {\r\n                            this.generateRandomNumbers();\r\n                        }}>Generate Array</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n                {bars}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction randomNum(i) {\r\n    return Math.floor(Math.random() * (i+1));\r\n}\r\n\r\nfunction timeout(delay) {\r\n    return new Promise( res => setTimeout(res, delay) );\r\n}\r\n\r\nfunction copyArr(orig) {\r\n    let copy = [];\r\n    for(let i = 0; i< orig.length; i++) {\r\n        copy[i] = orig[i];\r\n    }\r\n    return copy;\r\n}","import SortingVisualizer from './SortingVisualizer';\nimport './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <SortingVisualizer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}